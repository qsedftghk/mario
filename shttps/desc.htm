<html><head>
<style>font.cl{font-size:9pt; line-height:10pt}
</style>
</head><body BGCOLOR=#ffffff text=#000000><center><h1>Small HTTP server</h1></center>
<p><a name=c></a><h3>Содержание</h3>
<table cellspacing=3 cellpadding=8 border=0 width=100%><tr valign=top><td>
<li><a href=#w>Что это?</a>
<li><a href=license.txt>Лицензия.</a>
<li><a href=#w1>Возможности</a>
<li><a href=#h>Как...? </a>
<li><a href=#h1>Каталоги и имена файлов</a>
<li><a href=#h2>Настройки и параметры командной строки</a>
<li><a href=#h3>Запуск скриптов</a>
<li><a href=#s>SSI</a>
<li><a href=#re>Регулярные выражения</a>
<li><a href=#i>Internet Server Applications (ISAPI)</a>
<li><a href=#p>Proxy сервер</a>
<li><a href=#d>DNS сервер.</a>
<li><a href=#m>SMTP сервер.</a>
<li><a href=#P3>POP3 server & proxy</a>
<li><a href=#F>FTP server & proxy</a>
<li><a href=#T>TLS/SSL сервер.</a>
<li><a href=#r>Регистрация.</a>
<li><a href=#l>Заключение.</a>
</ul>
</td><td><ul><ul><ul>&nbsp; </ul></ul></ul></td>
<td align=left bgcolor=#e0fff0 width=20%>
<center><h4>Когда сервер запущен доступны:</h4></center>
<font size=2 class=cl><b>
<a href=http://127.0.0.1/$_admin_$conf>Установки / Текущие состояние</a><br>
<a href=http://127.0.0.1/$_admin_$host>Пользователи и Виртуальные хосты</a><br>
<a href=http://127.0.0.1/$_admin_$state>Текущая статистика</a>
<hr><center>В он-лайне:</center>
<a href=http://srv.mf.inc.ru/news.htm>Что нового?</a><br></b>(Последняя версия, Форум, и т.д.)<br>
<b><a href=http://srv.mf.inc.ru/webmail.exe>Сгрузить Web Mail</a><br></b> Внешний скрипт предоставляющий Web интерфейс для работы с почтой</sup><br>
<b><a href=http://srv.mf.inc.ru/regrus.cgi>Регистрация.</a><br>
<a href="mailto:max@mf.inc.ru">E-mail...</a></b></font></td></tr></table>

<a name=w><p></a><br><center><h2>Что это и зачем оно нужно?</h2></center>
<p>Эта очень небольшая утилита превращает ваш компьютер в полноценный
Web-сервер. Сама программа задействует минимальное количество
системных ресурсов, функционирование сервера не должно сказаться на
производительности вашего компьютера. Сервер может работать в локальной
сети или даже на DialUp-е. Веб-мастера могут запускать эту утилиту даже на
своем локальном компьютере, и не входя в сеть отлаживать CGI-скрипты.
<a name=w1><p></a><br><center><h2>Возможности.</h2></center>
<ul>
<li>Поддержка метода GET HTTP/1.0
<li>Поддержка метода POST HTTP/1.0
<li>Многозадачность. -- Одновременная передача данных и прием запросов
от нескольких удаленных пользователей. При этом для пользователей
задержка зависит в основном от пропускной способностью вашего или их канала.
<li>Высокое быстродействие. Сервер передает данные без
каких-либо простоев или задержек.
<li>Запуск CGI -- скриптов:
<ul>
<li>PE *.exe Windows формат.
<li>MZ *.exe DOS формат.
<li>*.com DOS формат.
<li>Запуск perl-скриптов через запуск внешнего Perl-интерпретатора.
<li>Обработка phtml-страниц через запуск внешнего <a href=http://www.php.net>PHP</a>-интерпретатора.
<li>Запуск приложений ассоциированных с типами файлов Windows.
</ul>
<li> SSI.
<li> Динамический вывод информации об обработанных запросах.
Под протокол отводиться шестнадцати - килобайтный буфер после заполнения
которого, наиболее ранние записи убиваются по мере поступления новых.
Протокол может сохраняется на диске. Если вы включите сохранение, запись
будет производиться по накоплении четырех килобайт.
<li>Контроль запросов, защита вашей информации.
<li>Простота установки.
<li>Виртуальный хостинг.
<li>HTTP Proxy сервер.
<li>Простой DNS сервер.
<li>FTP сервер.
<li>POP3 сервер.
<li>SMTP сервер.
<li>Подробная статистика и администрирование.
</ul>
Так же одним из достоинств этой программы является ее компактность. Ее
работа не должна мешать вашей! Она задействует минимум системных
ресурсов, ровно столько сколько необходимых для быстрой передачи данных,
и сразу же освобождает их после передачи. Для обеспечения такого режима
работы мне пришлось несколько ограничить, те возможности которые могли
бы быть.

<p><a href=#c>Содержание</a><hr><center><a name=h></a><br><h2>Как ...?</h2></center>
 Очень просто -- устанавливайте, запускайте http.exe и все ! Если Ваш браузер не
настроен на работу через прокси, то даже не входя в сеть вы
можете сами сходить на свой сайт используя стандартный
IP-адрес <a href=http://127.0.0.1/>http://127.0.0.1/</a>.
Если у вас нет собственного DNS-имени, это не страшно. Любой пользователь
может попасть ваш сайт используя Ваш IP адрес.
<center><a name=h1><p></a><br><h2>Каталоги и имена файлов.</h2></center>
Сервер поддерживает определенные имена каталогов. Ваш сайт начинается с подкаталога заданного в настройках
(по умолчанию WWW). Файлы могут передаваться только из него и из всех вложенных в
него подкаталогов, кроме файлов содержащих в своем пути идентификатор CGI, по умолчанию это /CGI-BIN/.
Предполагается, что в каталоге /CGI-BIN/ находятся исполняемые CGI-скрипты, и
при получении запроса на файл из /CGI-BIN/ сервер пытается его запустить. При
этом если файл имеет расширение *.pl то запускается Perl-интерпретатор,
который должен быть либо в PATH-е, либо указан в настройках. Запрос файла с
расширениями *.phtml,*.pht,*.php приводит к попытке запуска PHP
интерпретатора, которому передается указанный файл.
Например если Вы установили программу в каталог С:\HTTP то
по вашему IP-адресу можно будет забирать файлы из каталога
C:\HTTP\WWW т.е. http://127.0.0.1/test.htm==C:\HTTP\WWW\test.htm. А CGI в этом
случае запускаются из C:\HTTP\WWW\CGI-BIN\. Если Вы создали в каталоге WWW подкаталог WWW\IMAGES и
записали туда файл bgr.gif то получить его можно http://127.0.0.1/images/bgr.gif и т.д.
В любом случае, если имя файла не задано, т.е. запрос кончается на '/' то сервер автоматически подставляет имя
файла по умолчанию заданное в настройках, сохраняя структуру каталогов. Так http://127.0.0.1/My/
эквивалентно http://127.0.0.1/My/index.htm. Сервер может поддерживать несколько
виртуальных хостов. Каждый хост имеет собственный корневой каталог и также может включать виртуальные каталоги общие для всех.
<br> Сервер определяет тип файла по расширению.
Поддерживаются ASIS файлы. Эти файлы содержат полный HTTP заголовок
в начале. Такие файлы удобно использовать для перенаправления на другой сайт.
Этот файл должен начинаться с ключевого слова "Status: " и кода возврата и ваш
заголовок. После заголовка одна пустая строка и данные. Последнее расширение
должно быть <b>.asi</b> или <b>.asis</b>

<p><a href=#c>Содержание</a><center><a name=h2><p></a><br><h2>Настройки и параметры командной строки.</h2></center>
 Вы можете настроить сервер диалог "<b><u>У</u>становки..</b>", через Web интерфейс
если удаленное администрирование разрешено, или вы можете вручную редактировать <i>http.cfg</i>
или просто добавить параметров в командной строке.

<table border=1>
<tr bgcolor=#c0f0ff align=center><td><b>Параметры и коментарии</b></td><td><b>ключи</b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Общие параметры</td></tr>
<tr><td><b>Не показывать иконку в таскбаре.</b> Не добавлять иконку в таскбар.
В этом случае, когда окно спрятано, для доступа к диалогу администрирования вы должны:
Что бы открыть окно, нажмите Ctrl-Alt-Del, в появившемся таск-менетжере
выберите Http, и попробуйте закрыть его. Сервер спросит: "Do you want to close HTTP server?" ,
Если ответить "Нет", то откроется его окно. В окне сервера вызовите системное меню (Правой кнопка мыши
на заголовке) и выберите дополнительный элемент "Server".
Если программа запущена как служба NT то окно можно вызвать из менетжера служб, кнопкой Pause</td><td><b>noicon</b></td></tr>
<tr><td><b>Сворачиваться при старте.</b></td><td><b>hide</b></td></tr>
<tr><td><b>Подробный отчет для POP/SMTP/FTP.</b> Иначе фиксируются только основные события.</td><td><b>detail</b></td></tr>
<tr><td><b>Не сохранять лог.</b></td><td><b>nolog</b></td></tr>
<tr><td><b>Сохранять лог.</b> Выберите имя лог-файла.</td><td><b>log=<i>name.log</i></b></td></tr>
<tr><td><b>Новый лог файл каждый день.</b> Это нужно, что бы получать статистику по дням.</td><td><b>logday</b></td></tr>
<tr><td><b>Разрешить удаленное администрирование.</b> Иначе, для администраторов будут доступны только страницы статистики.</td><td><b>radmin</b></td></tr>
<tr><td><b></b>Максимальное количество одновременных подключений с одного и того же хоста.</b>
Для снятия ограничений можно использовать 0.
Ограничения распространяются на все TCP соединения (HTTP,FTP,POP,SMTP,Proxy)
</td><td><b>from_same_host=##</b></td></tr>
<tr><td><b>IP адреса, для которых сервер будет доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший. Например: 192.168.0.1-192.168.0.16,127.0.0.1</td><td><b>ip_range={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr><td><b>Запрещенные IP адреса, для которых сервер будет не доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший. Например: 192.168.0.1-192.168.0.16,127.0.0.1</td><td><b>ip_deny={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры HTTP сервера:</b></td></tr>
<tr><td><b>TCP/IP порт для HTTP сервера.</b> Обычно это 80</td><td><b>port=##</b></td></tr>
<tr><td><b>Сколько HTTP запросов будут обрабатываться одновременно.</b> Около 20Kb памяти будет резервироваться для ждущих нитей.
 Обычно 5-12 соединений достаточно для 3-8 посетителей в минуту.</td><td>
<b>max=##</b></td></tr>
<tr><td><b>Имя файла по умолчанию.</b> (Можно использовать шаблон '*'. Например index.* для любого index-а)</td><td><b>def=<i>name.ext</i></b></td></tr>
<tr><td><b>Файл ошибки.</b> Полный путь к файлу или скрипту возвращаемому при отсудствии запрошенного файла. Для скриптов и SSI переменная QUERY_STRING будет содержать имя запрошенного файла.</b></td><td><b>error=<i>path\name.ext</i></b></td></tr>
<tr><td><b>Корневая Web папка по умолчанию.</b> Каталог с которогр будет начинаться ваш сайт.</td><td><b>dir=<i>root_dir_name</i></b></td></tr>
<tr><td><b>CGI идентификатор.</b> Часть URL для определения CGI. По умолчанию это \"\\cgi-bin\\\", но можно использовать, например, \"\\cgi-\", \"\\local-bin\\\", \".cgi\", и т.д.</b></td><td><b>cgi_ident=<i>"\cgi-bin\"</i></b>
<tr><td><b>PERL интерпретатор.</b> Интерпретатор для скриптов с расширением .pl</td><td><b>perl=<i>path\name.exe</i></b></td></tr>
<tr><td><b>Разделяемый каталог.</b> Если вы хотите что бы для всех CGI был один и тот же каталог запуска, укажите его здесь. Иначе каталогом запуска, будет каталог самого скрипта.</td><td><b>share=<i>path</i></b></td></tr>
<tr><td><b>Разрешить обрабатывать Server Side Includes (SSI) в HTML файлах.</b> По умолчанию сервер проверяет SSI только в .sht*,.sml*,.asp* файлах. Предостережение: Обработка SSI требует больше памяти
и это медленнее</td><td><b>ssihtm</b></td></tr>
<tr><td>Отменяет предыдущий ключ.</td><td><b>nossihtm</b></td></tr>
<tr><td><b>Предельное количество байт принимаемое по методу POST.</b> Не указывайте большие значения т.к. это даст хакерам возможность серьезно загрузить вашу сеть, и затребовать много памяти</td><td><b>post_limit=##</b></td></tr>
<tr><td><b>Никогда не запускать .htm,.gif,.jpg файлы.</b> Иначе, сервер пытается запустить любой файл с CGI идентификатором.</td><td><b>norunhtm</b></td></tr>
<tr><td><b>Максимальное время на выполнение CGI</b> В секундах.</td><td><b>cgi_timeout=##</b></td></tr>
<tr><td colspan=2><center><b>CGI интерпретаторы</b></center>
 Приложения или DLL для запуска при запросе указанных CGI-файлов.
Например, для <i>.sh -- d:\gnu\bin\bash.exe</i>, для <i>.cgi -- d:\perl\perlis.dll</i>.
<div align=right><b>ext="<i>.ext;application;.ext;application;...</i>"</b></div></td></tr>
<tr><td colspan=2><center><b>MIME типы</b></center>
Определяет дополнительные MIME типы для расширений. Например, для <i>.bmp</i> mime тип может быть <i>image/bitmap</i>
<div align=right><b>mime="<i>.ext1;mime-type1;.ext2;mime-type2;...;.extN;mime-typeN</i>"</b></div></td></tr>
<tr><td colspan=2><center><b>Виртуальные хосты и виртуальные каталоги</b></center>
Веб каталоги для различных хост имен. Вы можете добавить сколько угодно имен
хостов и связать с каждым из них свой каталог. Что бы эти имена были видны
только на вашей машине, достаточно добавить их системный hosts -файл, или
выбрать соответствующую опцию, что бы сервер сделал это автоматически.
Здесь же могут быть добавлены виртуальные каталоги, каталоги общие для всех
хостав. Имя каталога задается между двумя слешами.
(<i><b>/</b>directory<b>/</b></i>)

<div align=right><b>hostpath="<i>hostname;path</i>"</b><br>Ключ может повторятся много раз.</div></td></tr>

<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры Proxy сервера</b></td></tr>
<tr><td><b>Запретить HTTP proxy.</b></td><td><b>noproxy</b></td></tr>
<tr><td><b>TCP/IP порт для proxy сервера.</b></td><td><b>proxy=</b><i>#port</i></b></td></tr>
<tr><td><b>Сколько proxy запросов будут обрабатываться одновременно.</b></td><td><b>proxy_max=</b><i>#max</i></b></td></tr>
<tr><td><b>IP адреса, для которых сервер будет доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший.</td><td><b>proxy_range={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr><td><b>Запрещенные IP адреса, для которых сервер будет не доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший. Например: 192.168.0.1-192.168.0.16,127.0.0.1</td><td><b>proxy_deny={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr><td><b>Запретить кэш на жестком диске.</b></td><td><b>noproxy_dir</b></td></tr>
<tr><td><b>Каталог для сохранения кеша.</b></td><td><b>proxy_dir=<i>path</i></b></td></tr>
<tr><td><b>Сколько дней должны храниться данные в кэше.</b> Proxy может загруженные файлы из кэша
по прошествии указанного количества дней поле загрузки.
В любом случае если юзер использует кнопку "Reload" файл перегружаетя.</td><td><b>proxy_time=<i>#days</i></b></td></tr>
<tr><td><b>Игнорировать NO-CACHE в управляющих заголовках страниц.</b> </td><td><b>ignocache</b></td></tr>
<tr><td><b>Proxy только для авторизованых пользователей.</b></td><td><b>proxyusers</b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры DNS сервера</b></td></tr>
<tr><td><b>Hosts file.</b> See also <a href=#hosts>format of this file</a></td><td><b>hosts=</b><i>hosts_file</i></b></td></tr>
<tr><td><b>Запретить DNS сервер</b></td><td><b>nohosts</b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Для сервера удаленного перенаправления запросов. Уведомления о текущем IP адресе:</b></td></tr>
<tr><td><b>URL запроса.</b> Полный URL для сообщения вашего IP адреса серверу динамических перенаправлений. Можно использовать \"$IP_ADDRESS\" переменную что бы вставить ваш IP адрес в URL.</td><td>
<b>ddns=<i>url</i></b></td></tr>
<tr><td><b>Интервал переподтверждения.</b></td><td><b>ddns_time=<i>#N</i></b></td></tr>
<tr><td><b>Запретить уведомления о текущем IP адресе.</b></td><td><b>noddns</b></td></tr></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры FTP сервера</b></td></tr>
<tr><td><b>Запретить FTP сервера</b></td><td><b>noftp</b></td></tr>
<tr><td><b>Сколько FTP запросов будут обрабатываться одновременно.</b></td><td><b>ftp_max=<i>max</i></b></td></tr>
<tr><td><b>TCP/IP порт для FTP сервера.</b> Обычно это 21</td><td><b>ftp_port=<i>port</i></b></td></tr>
<tr><td><b>Таймаут по бездействию в секундах.</b> По прошествии этого времени, после последней операции, соединение будет закрыто.</td><td><b>ftp_timeout=<i>#N</i></b></td></tr>
<tr><td><b>Имя для загрузок.</b> Если FTP каталог содержит такой подкаталог то пользователи с доступом только для чтения могут загружать туда файлы.</td><td><b>ftp_upload=<i>"/dir/"</i></b></td></tr>
<tr><td><b>Разрешить виртуальные директории для FTP.</b></td><td><b>ftp_vdirs</b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры POP3 сервера</b></td></tr>
<tr><td><b>Запретить POP3 сервер.</b></td><td><b>nopop3</b></td></tr>
<tr><td><b>Сколько запросов будут обрабатываться одновременно.</b></td><td><b>pop3_max=<i>max</i></b></td></tr>
<tr><td><b>TCP/IP порт для POP3 сервера</b>. Обычно это 110</td><td><b>pop_port=<i>port</i></b></td></tr>
<tr align=center bgcolor=#c0fff8><td colspan=2><b>Параметры SMTP сервера</b></td></tr>
<tr><td><b>Запретить SMTP сервера.</b></td><td><b>nosmtp</b></td></tr>
<tr><td><b>Сколько запросов будут обрабатываться одновременно.</b></td><td><b>smtp_max=<i>max</i></b></td></tr>
<tr><td><b>Имя SMTP сервера.</b> (Имя домена)</td><td><b>smtp_name=<i>your.domain.name</i></b></td></tr>
<tr><td><b>Использовать все виртуальные хосты как синонимы имени домена.</b></td><td><b>vhalias</b></td></tr>
<tr><td><b>TCP/IP порт для SMTP сервера.</b> Обычно это 25</td><td><b>smtp_port=<i>port</i></b></td></tr>
<tr><td><b>Output каталог.</b> Каталог для сохранения сообщений перед отправкой.</td><td><b>smtp_out=<i>path</i></b></td></tr>
<tr><td><b>Sent каталог.</b> Каталог для сохранения сообщений после отправки.</td><td><b>smtp_sent=<i>path</i></b></td></tr>
<tr><td><b>Error каталог.</b> Каталог для сохранения сообщений, которые не удалось доставить адресату.</td><td><b>smtp_err=<i>path</i></b></td></tr>
<tr><td><b>DNS сервер, через который будет искаться информация о почтовом пути.</b> (Это может быть ваш обычный DNS сервер)</td><td><b>smtp_dns=<i>#.#.#.#</i></b></td></tr>
<tr><td><b>Принимать для отправки сообщения с любым полем "From".
</b> Иначе сервер будет отсылать сообщения только от <i>извесный_пользователь</i>@<i>имя.домена</i></td><td><b>smtp_any</b></td></tr>
<tr><td><b>IP адреса, для которых сервер будет доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший.
</td><td><b>smtp_range={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr><td><b>Запрещенные IP адреса, для которых сервер будет не доступен.</b> Указывайте IP адреса через запятую и диапазоны младший через дефис старший. Например: 192.168.0.1-192.168.0.16,127.0.0.1</td>
<td><b>smtp_deny={#.#.#.#[-#.#.#.#],}</b></td></tr>
<tr><td><b>Черный список.</b> E-mail адреса спамеров через пробел. (Можно *@имя.хоста чтобы запретить принимать сообщения от всех с этого хоста)</td><td><b>blacklist="<i>u@adr1 *@adr2 ...</i>"</b></td></tr>
<tr><td><b>Проверять наличие \"forward\" файла в каталоге пользователя и выполнять инструкции из него.</b></td><td><b>forward</b></td></tr>
<tr><td><b>Разрешить исполнение приложений из пользовательского \"forward\" файла.</b> </td><td><b>fwdrun</b></td></tr>
<tr><td colspan=2><center><b>Пользователи</b></center>
Что бы предоставить FTP, почтовый или администраторский доступ вы должны добавит пользователей.
<div align=right><b>user="<i>имя;пароль;домашний_каталог;тип_доступа</i>"</b>
<br>Ключ может повторяться несколько раз.</div>
<i>тип_доступа</i> -- это последовательность следующих символов:
<ul>
<li><b>F</b> -- FTP доступ -- пользователь может читать файлы из своего домашнего каталога по FTP протоколу.
<li><b>W</b> -- FTP доступ на запись -- пользователи могут сгружать файлы в свой домашний каталог по FTP протоколу.
<li><b>N</b> -- Запретить запись файлов с CGI идентификатором в пути.
<li><b>S</b> -- SMTP. Пользователи могут отправлять сообщения по SMTP с адреса<i>имя_пользователя</i>@<i>имя.вашего.домена</i>
<li><b>P</b> -- POP3. Пользователь будет иметь почтовый ящик. Все сообщения на <i>имя_пользователя</i>@<i>имя.вашего.домена</i>
будут сохранятся в каталоге домашний_каталог\mbox и будут доступны через POP3.
<li><b>A</b> -- <font color=#c01080>Это администратор.</font> -- Имеет полный доступ
к административным страницам, может добавлять пользователей, менять права доступа и т.д...
<li><b>H</b> -- Proxy. Доступ к Proxy-серверу.
</ul>
Для FTP доступа вы можете добавить <i>anonymous</i> пользователя без пароля
В этом случае просто оставьте поля пароля пустым. Например:
<pre>
user=anonymous;;c:\public;FWN
user=ftp;;c:\readonly;F
</pre>
</td></tr></table>

<br>Обратите внимание, что между именем переменной знаком равенства и значением не должно быть пробела
Если значение содержит пробелы, вводите его в кавычках. Вот пример строки запуска:
<br><b><tt><pre>http.exe port=1080 def=index.html php="C:\PROGRAM FILES\PHP\php.exe" nolog</pre></tt></b>
Вот пример конфигурационного файла:
<b><tt><pre>
log=c:\temp\http.log
perl=c:\Perl\bin\perlis.dll # supported !!!
max=12 def=index.stm
@www.cfg # include other configuration file
hostpath=www.name.www;C:\www1
hostpath=max.name.www;C:\www2
# End of file
</pre></tt></b><br>
<br>

<p><a href=#c>Содержание</a><hr>
<center><a name=h3><p></a><br><h2> Запуск скриптов.</h2></center>
Скрипты запускаются в случае когда запрошенный файл в своем пути
содержит идентификатор CGI. По умолчанию из поддиректории /CGI-BIN/
Если выбрана опция "Запускать системные файлы"  то также будут запускаться
файлы с атрибутом 'SYSTEM'.
При этом поддерживается интерфейс CGI/1.1 подробное описание которого
можно найти например на
<a href=http://Web.Golux.Com/coar/cgi/>http://Web.Golux.Com/coar/cgi/</a>
При запуске строка запроса передается как в командной строке так и в
переменной окружения QUERY_STRING. После запуска выходной поток скрипта
напрямую транслируется пользователю приславшему запрос. Скрипт,
обязательно должен выдавать строку Content-Type: <i>тип</i>\r\n или
Location: <i>url релокейшена.</i>. Также могут следовать другие
служебные строки, например Content-Length: <i>xx</i>\r\n или Date:
Завершается служебная информация последовательностью \r\n\r\n. Если вы
пишите на Си или Перле то обратите внимание на то, что функции вывода в
тестовом режиме сами преобразуют символ \n в последовательность \r\n. На
Паскале функция writeln завершает вывод этими символами.

<p><a href=#c>Содержание</a><hr>
<a name=s><p></a><h2><center>Server Side Includes (SSI) </center></h2><p>
<li type=circle> SSI значительно расширяет Ваши возможности, позволяя динамически
вставлять, документы или результаты работы CGI в произвольные места
запрошенного документа.<br>
<li type=circle> Когда удаленный пользователь запрашивает у Вас файл имеющий
расширение *.SHT, *.SHTM, *.SHTML сервер отдает его с учетом
встречающихся в нем SSI тегов.<br>
<li type=circle> SSI тег имеет следующий формат:<br>
<b>&lt;!--#имя_тега {переменная="значение" } --&gt;</b><br>
<li type=circle> Внутри "значения" могут применятся подстановки HTTP
переменных или <b>переменных полей формы запроса</b>. Имя переменной
начинается с символа '$' и далее может быть заключено в фигурные скобки
{}, если Вы хотите объединить полученное значение с последующим текстом,
исключая пробелы. Например значением "$USER_AGENT" является
соответствующая строка идентифицирующая браузер, а если вы хотите
объединить ее с текстом "_12345" то используйте "${USER_AGENT}_12345"
Для включения в значение символа '$' используйте '\$', для '\' -- '\\',
для '"' -- '\"' и т.д. Если при подстановке, соответствующая переменная
не найдена подставляется значение "undefined".

<p>Данная версия сервера поддерживает следующие теги:
 <p><b>include</b><br>
&lt;!--#include virtual="patch/file_name" --&gt;<br>
&lt;!--#include file="full_patch/file_name" --&gt;<br>
Оба варианта этой директивы включают в документ содержимое файла
file_name. В первом случае документ ищется, начиная с каталога
сервера. Во втором случае, начиная с каталога текущего документа. В
обоих случаях path вообще может быть опущен. Если в результате
подстановки обнаруживается, что запрашиваемый документ находится на
сервере в подкаталоге /CGI-BIN/ то он воспринимается как CGI и
запускается. Выходной поток соответственно транслируется, начало до
последовательности "\r\n\r\n" убирается. При этом если в имени не
содержалось символа '?' то CGI передается исходный запрос, с которым
обратились к родительскому документу. Если обнаружен '?' то дальнейшая
последовательность будет передана как запрос, она должна быть
соответственно преобразована Вами.
 <p><b>exec</b><br>
&lt;!--#exec cgi="file_name" --&gt;<br>
&lt;!--#exec cmd="full_patch/file_name" --&gt;<br>
 Запуск скрипта. Все аналогично include. В первом случае файл
запускается из каталога CGI-BIN, во втором должен быть задан
полный маршрут.
 <p><b>fsize и lastmod</b><br>
&lt;!--#fsize virtual="patch/file_name" --&gt;<br>
&lt;!--#fsize file="full_patch/file_name" --&gt;<br>
&lt;!--#lastmod virtual="patch/file_name" --&gt;<br>
&lt;!--#lastmod file="full_patch/file_name" --&gt;<br>
 Подставляет размер или дату последней модификации файла.
 <p><b>echo </b><br>
&lt;!--#echo var="var" --&gt;<br>
 Выводит значение переменной.
 <p><b>printenv </b><br>
&lt;!--#printenv --&gt;<br>
 Выводит все переменные.
 <p><b>break </b><br>
&lt;!--#break --&gt;<br>
 Вызывает прекращение обработки документа.<br>
 <p><b>if -- elif -- else -- endif</b><br>
&lt;!--#if expr="выражение" --&gt;<br>
 <i> текст </i><br>
&lt;!--#elif expr="выражение" --&gt;<br>
 <i> текст </i><br>
&lt;!--#elif expr="выражение" --&gt;<br>
 <i> текст </i><br>...<br>
&lt;!--#else --&gt;<br>
 <i> текст </i><br>
&lt;!--#endif --&gt;<br>
Подстановка по условию. Текст будет передаваться пользователю в зависимости
от истинности условий. Выражение может содержать переменные и значения
разделенные знаками логических операций и скобками:<br>
 ! -- перед выражением -- простое отрицание<br>
 = или == -- равно<br>
 != -- не равно<br>
 &lt;,&gt;,&lt;=,&gt;= -- соответственно.<br>
 && между выражениями логическое и.<br>
 || между выражениями логическое или.<br>
str1~str2 -- результат истина, если строка str2 является
 частью строки str1. <br>
str1 =~ /pattern/<i>ig</i> -- pattern это  <a href=#re>регулярное выражение Юникс</a>.
Результат истина, если в строке str1  обнаруживается подстрока
соответствующая шаблону pattern

<br>

 Если вообще нет никакого знака сравнения, то значение
выражения сравнивается с "undefined".
Части <b>elif</b> и <b>else</b> могут быть пропущены.
Часть <b>elif</b> может повторяться сколько угодно раз.
Обязательно долен быть закрывающий тег <b>endif</b>.
 <p><b>set</b><br>
&lt;!--#set var="переменная" value="значение" --&gt;<br>
Добавление или изменение значения переменной. Не стоит злоупотреблять этой
опцией, так как и количество переменных которые можно добавить и размер
буфера под них ограничены.

<p><a href=#c>Содержание</a><hr>
<a name=re></a><center><br><h2>Регулярные выражения</h2></center><p>

Для анализа входящих переменных можно использовать поиск по шаблону.
Шаблон это  регулярное выражение,  соответствует синтаксису принятому
в Юниксе, и позволяет найти и выделить фрагмент практически любой сложности.
(Расширенный синтаксис регулярных выражений допускаемый в Переле пока не поддерживается)
Регулярное выражение представляет из себя подстроку поиска в которой также
могут присудствовать, распозноваться и подставлятся
метасимволы, модификаторы и переменные.
Понимаются следующии метасимволы:
<li><b> ^ </b> -- начало строки.
<li><b> . </b> -- любой символ кроме новой строки.
<li><b> \ </b> -- если седующий символ метасимвол он рассматривается как
обычный символ. Например \. это просто точка.
Также понимаются следующии последовательности:
 <ul>
  <li><b> \n </b>  конец строки
  <li><b> \r </b>  возврат коретки
  <li><b> \t </b>  табуляция
  <li><b> \\ </b>  \  - слеш
  <li><b> \x## </b>  шестнадцатиричный код символа.
  <li><b> \o### или \0### </b>  восмеричный код символа.
  <li><b> \###  </b>  десятичный код символа.
 </ul>
<li><b> [] </b> -- в квадратных скобках указываются допустимые
или не допустимые значения для символа:
Символ строки считается совпавшим, если он указан в скобках
Если первый элемент в скобках '^'  значит символ может быть любым кроме
символов указаных в скобках. '-' внутри скобок означает  символы
от ему предшествующего до последующего.  Символ '\' также изменяет
значение следующего за ним символа.
Примеры:
<ul>
<li>[0-9]   --означает все цыфры.
<li>[a-zA-Z]   --означает все строчные и заглавные буквы.
<li>[^@$\-\n\o008\x01]   --означает что годится любой символ кроме
 @,$,-,новой строки, символов с кодами 8 и 1.
</ul>
<li><b> () </b>  -- предписывает запомнить подстроку соответствующую шаблону
внутри скобок  для последующего использования.
Найденные подстроки нумеруются последовательно от 1 до 9 и
доступны как переменные $1 - $9. Последнее совпадение также доступно как  $+
<li><b> | </b> -- или.
<br>
После метасимвола может следовать модификатор:
<li><b> * </b> -- повторяется 0 или большее число раз
<li><b> + </b> -- повторяется 1 или большее число раз
<li><b> ? </b> -- может отсудствовать
<li><b> {n} </b> -- повторяется n раз
<li><b> {n,} </b> -- повторяется n или большее число раз
<li><b> {n,m} </b> -- повторяется не меньше n но не больше m раз.
После любого модификатора может следовать еще один модификатор '?'
уменьшающий распространение шаблона. Например,
для поиска в строке '123abcdefff567'
<ul>
 <li> при шаблоне /([a-z]*)/    $1 будет равна "abcdefff"
 <li> при шаблоне /([a-z]*)f/   $1 будет равна "abcdeff"
 <li> при шаблоне /([a-z]*?)f/  $1 будет равна "abcde"
</ul>
В конце шаблона, после последнего слеша, могут следовать модификаторы.
Сейчас программа понимает следующие модификаторы:
<li><b> i </b> -- не разлечать строчные и прописные буквы
<li><b> v </b> -- запретить очистку списка переменных ($1 - $9).
Без этого модификатора програма будет очищать список в новом логическом
выражении, когда первое регулярное выражение начнет проверяться.
<li><b> c </b> -- Очистить список переменных ($1 - $9) перед началом.
<br>


<p><a href=#c>Содержание</a><hr><a name=I><p></a>
<br><h2>Internet Server Applications (ISAPI)</h2></center>
 Это алтернатива к CGI исполняемым файлам. Сервер будет определять
исполняемы файлы с расширением .DLL  как ISAPI. Для каждого
пользовательского запроса к такому файлу, будет вызвана
функция <b>HttpExtensionProc</b> из этой DLL. Полное описание
интерфейса и заголовочные файлы есть SDK. Моя
реализация этого интерфейса  имеет следующие дополнительные свойства:
<li>Если <b>HttpExtensionProc</b> вернет 4 (HSE_STATUS_ERROR) или больше
то DLL будет выгружена.
<li>Когда скрипт вызывает <b>WriteClient</b> либо dwHttpStatusCode должна
содержать правельное значение или вывод должен начинаться с HTTP/ и
содержать полный HTTP ответ.
<li>Отсудствие <b>GetExtensionVersion</b> -- это не ошибка.


<p><a href=#c>Содержание</a><hr>
<a name=p></a><center><br><h2>Прокси</h2></center><p>
Эта версия включает в себя http прокси сервер. Вы можете указать порт
для прокси, одновременное число подключений. Кэш на жестком диске.
позволяет сохранять весь принятый трафик определенное
количество дней. HTTP протокол предусматривает запрет кеширования
определенных страниц. Часто владельцы сайтов пользуются этим только для
того, что бы подсчитывать реальное число посещений. По вашему указанию
сервер может игнорировать NO-CACHE. В этом случае страничка будет
перегружаться только когда один из пользователей прокси нажмет кнопку
Reload в своем браузере. Можно включить авторизованый доступ к прокси, и
добавить пользователей для которых он разрешен.

Смотрите так же <a href=#h2>описания ключей командной строки.</a>

<p><a href=#c>Содержание.</a><hr>
<center><a name=d></a><br><h2>DNS сервер</h2></center><p><a name=hosts></a>
Эта версия включает в себя DNS сервер. Для запуска вы должны
указать <b>hosts</b>-файл. Формат этого файла с одной стороны совместим со
стандартным виндосовким, с другой стороны дополнен
возможностью быть похожим на формат мастер-файла рекомендованого в RFC 1035.<br>

Для совместимости с системным хост-файлом, каждая строка должна состоять
из IP адреса и имени хоста. Комментарии начинаются с символа <b>'#'.</b>
В отличие от виндосовкого формата доменные имена в этом файле могут
начинаться с последовательности '*.' для описания всех поддоменов. Вот
пример такого файла:<br>
<pre>
# Here example of hosts file for local network begins.
192.168.1.21 www.max.local
192.168.1.21 max.local
192.168.1.21 max.max.local
192.168.1.20 *.max.local
192.168.1.22 www.boss.local
192.168.1.23 serg.local
192.168.1.26 www.serg.local
192.168.1.24 *.andy.local
192.168.1.25 *.mary.local
# etc ...
# end of hosts file
</pre>

Так же каждая строка может соответствовать рекомендациям RFC и содержать
имя домена и RR описание.  Коментарии могут начинаться с ';'<br>
$ORIGIN <i>&lt;domain-name&gt;</i><br>
$TTL <i>&lt;validate-time&gt;</i> -- целое, описывающие время в течении
которого запись может храниться в кеше.<br>
[&lt;domain-name&gt;</i>] &lt;blank&gt;</i> [&lt;TTL-always-ignored&gt;</i>] IN &lt;type&gt;</i> &lt;RDATA&gt;</i><br><br>

При описании домена, в отличии  RFC рекомендаций вы должны
указывать <i>&lt;domain-name&gt;</i> полностью. ('@' не интерпретируется,
завершающая точка может пропускаться или присудствовать, без разницы).
Вы можете вообще пропустить <i>&lt;domain-name&gt;</i> в этом случае
используется предыдущие имя домена. в отличии RFC рекомендаций вы должны
указать  класс "IN"  для каждой строчки в RR формате.
<i>&lt;type&gt;</i> может быть:
<li> A  <i>&lt;IP-address&gt;</i> - имя хоста
<li> NS <i>&lt;full-name&gt;</i> -  авторизирующий сервер имен.
<li> CNAME <i>&lt;full-name&gt;</i> - синоним.  'A' запись оригинала
должна присудствовать в том же файле.
<li> SOA <i>&lt;full-name&gt;</i> <i>&lt;e-mail by owner&gt;</i> (<i>&lt;SERIAL&gt;</i>,<i>&lt;REFRESH&gt;</i>,<i>&lt;RETRY&gt;</i>,<i>&lt;EXPIRE&gt;</i>,<i>&lt;MINIMUM&gt;</i>)
 - начало зоны.
<li> MX <i>&lt;preference&gt;</i> <i>&lt;full-name&gt;</i> - почтовый сервер. &lt;preference&gt;</i> -- число
от 1 до 255.  Наименьшее значение соответствует наиболие предпочтительному серверу.
<li> PTR <i>&lt;full-name&gt;</i> - имя. Хост с левой стороны должен быть вида #.#.#.#.in-addr.arpa

<br> Другие типы игнорируются.<br>
Также сервер поддерживает PTR запросы, но RDATA для ответа берется из
первой 'A' записи с этим IP, или из строк совместимых с системным hosts файлом.
Для любого типа записей domain-name может начинаться с шаблона '*.'
что бы описать все под-домены. Сервер поддерживает '*'- запрос, для возврата
всего о домене. Для домена с шаблоном ответы на такой запрос тоже будет содержать шаблон.
Для всех других типов запросов ответы будут без шаблонов.
<p>Сервер может поддерживать рекурсию. Для реализации резольвинга любого
домена вы должны указать NS записи корневых серверов. Если вы выбрали
"Рекурсивные вызовы только к серверам верхнего уровня." вместо корневых
серверов укажите DNS сервера вашего, провайдера. Все запросы будут идти
к ним. Иначе, сервер будет обращатся к различным серверам,
предположительно близким к запрошенной зоне.

Пример:<br>
<pre>
# Here is an example of hosts file for export domain to Internet,
# and resolve other names.

; First, lines holds the information on root name servers needed to
; initialize cache of Internet domain name servers

.                  IN  NS a.root-servers.net
a.root-servers.net IN  A  198.41.0.4
.                  IN  NS b.root-servers.net
b.root-servers.net IN  A  128.9.0.107
.                  IN  NS c.root-servers.net
c.root-servers.net IN  A  192.33.4.12
.                  IN  NS d.root-servers.net
d.root-servers.net IN  A  128.8.10.90
.                  IN  NS e.root-servers.net
e.root-servers.net IN  A  192.203.230.10
.                  IN  NS f.root-servers.net
f.root-servers.net IN  A  192.5.5.241
.                  IN  NS g.root-servers.net
g.root-servers.net IN  A  192.112.36.4
.                  IN  NS h.root-servers.net
h.root-servers.net IN  A  128.63.2.53

; Now declare our domain

$TTL 86400  ;TTL - 24 hours

somedomain.net IN SOA  somedomain.net  max@somedomain.net (
 2002120602 ; Serial
 36000      ; Refresh
 3000       ; Retry
 36000000   ; Expire
 36000      ; Minimum
 )
  IN NS   ns.somedomain.net
  IN NS   ns2.somedomain.net
  IN MX 1 relay1.somedomain.net
  IN MX 2 relay2.somedomain.net
  IN A 192.168.12.1

ns.somedomain.net     IN A 192.168.12.1
ns2.somedomain.net    IN A 192.168.12.2
relay1.somedomain.net IN A 192.168.12.1
relay2.somedomain.net IN A 192.168.12.2

pc2.somedomain.net    IN A 192.168.12.2
  IN NS   ns2.somedomain.net
  IN MX 1 relay1.somedomain.net

*.somedomain.net      IN A 192.168.12.1
  IN NS   ns.somedomain.net
  IN NS   ns2.somedomain.net
  IN MX 1 relay1.somedomain.net
  IN MX 2 relay2.somedomain.net


; also this file may contents lines in next format:
192.168.1.21 www.max.local
192.168.1.21 max.local
192.168.1.20 *.max.local

# end of hosts file
</pre>


<br><br>
<a name=m></a><center><br><h2>SMTP сервер</h2></center><p>
SMTP сервер может:
<li>Принимать сообщение для указанных пользователей. Адрес назначения должен быть <i>user_name</i>@<i>your.domain.name</i>
Эти сообщения сохраняются в пользовательском home\mbox каталоге и доступны через POP3.
<li>Принимать сообщения от указаных пользователей для любого. Исходный адрес должен быть <i>user_name</i>@<i>your.domain.name</i>
Вы можете разрешить принимать сообщения от любого для любого, и вы можете ограничить диапазон IP, для которого разрешены сообщения этого типа.
Для определения пути, SMTP сервер спрашивает DNS сервер. Вы должны указать DNS IP в настройках.
<li>Вы можете добавлять адреса спамеров в черный список. Сообщения с этих адресов никогда не будут приниматься.
<li>Вы можете разрешить серверу проверять пользовательский "forward" файл, чтобы перенаправлять или фильтровать сообщения.<br>
Файл с именем "forward" может лежать в домашнем каталоге пользователя. Когда опция включена
сервер анализирует каждую строчку этого файла и понимает следующие инструкции:
<li><b>#if </b><i>выражение</i> -- следующие строки будут проверяться, только если выражение истина.
<li><b>#elif </b><i>выражение</i> -- если предыдущие условие ложь, то следующие строки будут проверяться, если выражение истина
<li><b>#else</b> -- следующие строки будут проверяться, только если предыдущие выражение ложь.
<li><b>#endif</b> -- конец условного блока
<li><b>#mv</b> <i>куда</i> -- переместить сообщение
<li><b>#cp</b> <i>куда</i> -- копировать сообщение
<li><b>#rm</b>  -- удалить сообщение

<li><b>#</b> <i>что угодно</i> -- комментарий
<li><b>!</b><i>d:\путь\приложение {параметры}</i> -- выполнить
"d:\путь\приложение {параметры} каталог_пользователя\mbox\имя.msg".
Только если в настройках разрешено исполнение.
Так же  возможно  указать в строке запуска переменные ($имя_переменной),
но в этом случае:
<ul>
<li> -- "каталог_пользователя\mbox\имя.msg" не добавляется автоматически.
Используйте переменную $msgfile чтобы  передать имя файла собщения.
<li>  --  строка  рассматривается  как  интерполируемая, т.е. символ '\'
рассматривается  как  начало  поледовательности,  заменяте  их  двойными
слешами. ("\\")
</ul>
<li><i>to1<b>@</b>host1 {toN<b>@</b>hostN}</i> -- переслать сообщения на эти адреса.
<br>
 Условие может содержать переменные (<b>$size_kb</b> -- размер сообщения в кБ;
<b>$in_text(</b><i>текст для поиска</i><b>)</b> -- истина, если текст содержится в сообщении;
<b>$errorlevel</b> -- значение возвращенное последним внешним скриптом или ноль если небыло удачных запусков)
и значения разделенные следующими знаками операций:
<b>$text</b> -- полный текст сообщения.
<b>$body</b> -- тело сообщения.
<br><br>
 ! -- перед выражением -- простое отрицание<br>
 = или == -- равно<br>
 != -- не равно<br>
 &lt;,&gt;,&lt;=,&gt;= -- соответственно.<br>
 && между выражениями логическое и.<br>
 || между выражениями логическое или.<br>
  =~ /pattern/<i>ig</i> поиск по шаблону. pattern это  <a href=#re>регулярное выражение Юникс</a>.
Результат истина, если в строке str1  обнаруживается подстрока
соответствующая шаблону pattern<br>

Пробел  и обратный слеш (' \') в конце строки означает продлжени текущей
команды на следующей строке.

Пример:<br>
<pre>
# Here is the example of forward file.

#if  $text =~ /\nFrom: .*?boss@address/i
!d:\perl\bin\perl.exe check.pl
#endif

#if $in_text(100% FREE)
#mv c:\probably\spam
#elif $size_kb<=20 && ! ( $text =~ /^From: .*?([^< ]+?@[^> \r\n]+).*/i && ($1 == my@private.address || $1 == boss@address ) || $in_text(do not redirect) )
#cp c:\probably\importan
my_home@address my_seccond_address@yahoo.com
#else
!d:\perl\bin\perl.exe autoreply.pl $msgfile $1
#endif

# End of forward file
</pre>

Пример:<br>

<li>  Антивирусный  скрипт  имеет такой же формат как "forward" файл, но в
отличии   от  "forward"-файла  он  проверяется перед отправкой любого
каждого сообщения.

<pre>
# Here is the example of antivirus file.

#if  $text =~ /Content-Transfer-Encoding: ["`]?base64[\001-\xFF]*?\n\r?\nTVqQAAMA/

#if  $text =~ /name=.*\.pif/
#mv c:\probably\virus
#else
!c:\DrWeb\drwebcl.exe /GO /TM- /WA- /TB- /ML
#endif

#elif $body =~ /&lt;script language=/ && $body =~ /&lt;!DOCTYPE HTML/
#mv c:\probably\spam
#endif

# End of file

</pre>
Фильтр разрыва, это специальное вырожение которое может
осуществить проверку после того как сервер получил первые 8Kb сообщения.
Если результат этого выражения исина, собщение не будет приниматья дальше,
Комбинация "отправитель+IP адрес+приветствие сервера+получатели" будет
помещена во временный черный список и последующие попытки отправить
это сообщения будут присекаться еще до начала приема данных.<br>
   Внутри выражения могут проверяться следующие переменные:
<li>$msg  -- первые 8Kb сообщения
<li>$sender -- адрес отправителя
<li>$hello -- самоидентификация удаленного сервера.
<li>$control -- полная идентификационная строка в формате:<br>
<tt>"From отправитель (удаленный_сервер [IP]) дата и время For получатели\r\n"</tt>
<br>
Выражение может включать такие же действия как и в операторе #if:
||,&&,<,>,>=,<=,==,!=,=~
<br>
Фильтр разрыва предназначен для остановки получения больших спамерских писем.
<br>
Пример выражения:
<pre>
 (! ( $msg =~ /^From:[^\n\r]*<([^>\n\r]+)>/i ||
      $msg =~ /^From:[ \t]*([^\n\r]+)/i        )
 )
 || $1 != $sender
 || $msg =~ /^Subject:[^\n\r]*семинар|руководителю|бухгалтеру/i
 || $msg =~ /aдpес[ \r\n\t]+пoлучен[ \r\n\t]+из[ \r\n\t]+oткpытыx[ \r\n\t]+истoчнuкoв/i
 || $msg =~ /р[ \r\n\t]*А[ \r\n\t]*м[ \r\n\t]*е[ \r\n\t]*р[ \r\n\t]*и[ \r\n\t]*к[ \r\n\t]*а[ \r\n\t]*н[ \r\n\t]*с[ \r\n\t]*к.*А[ \r\n\t]*н[ \r\n\t]*г[ \r\n\t]*л[ \r\n\t]*и[ \r\n\t]*/i
</pre>

В данном примере: первые четыре строки проверяют наличие в сообщении
поля From, выделяют адрес из этого поля и требуют совпадения этого адреса
с адресом отправителя;
следующая строка в поле Subject ищет любое из слов "семинар","руководителю","бухгалтеру";
следущей строкой в теле сообщения ищется строка
  "aдpес пoлучен из oткpытыx истoчнuкoв", при этом между словами может
быть любое количество пробелов;
последняя строка ослеживает различные модификации производные от строки
"Центр Американского Английского"
<br>
При выполнении любого из этих условий письмо ситается спамом.




<hr><a name=P3></a><center><br><h2>POP3 сервер и прокси</h2></center><p>
POP3 сервер предоставляет доступ к входящей почте. Если POP3 прокси разрешен
то пользователи могут настроить свои почтовые программы чтобы забирать почту
с любых удаленных POP3 через этот POP3. Для этого, <i>user</i> настройка в почтовой
программе должна иметь вид:<br>
<i><b>local_user@remote_user@remote_host</b></i><br>
Пароль должна иметь вид:
<i><b>local_password@remote_password</b></i><br>
Или <i>@remote_password</i> часть может быть добавлена к <i>user</i> настройке.
Везде вместо <b>'@'</b> может использоваться <b>'#'</b>.

<hr><a name=F></a><center><br><h2>FTP сервер и прокси</h2></center><p>
FTP сервер предоставляет доступ к  домашним каталогам пользователей и если
опция
"Разрешить виртуальные директории для FTP" выбрана то и к
<b>приватным</b> виртуальным каталогам.  Открытые виртуальные каталоги
недоступны через FTP.<br>
Если FTP прокси разрешен
то пользователи могут настроить свои FTP программы чтобы забирать почту
с любых удаленных FTP через этот FTP. Для этого, <i>user</i> настройка в FTP
программе должна иметь вид:<br>
<i><b>local_user@remote_user@remote_host</b></i><br>
Пароль должна иметь вид:
<i><b>local_password@remote_password</b></i><br>
Или <i>@remote_password</i> часть может быть добавлена к <i>user</i> настройке.
Везде вместо <b>'@'</b> может использоваться <b>'#'</b>.

<br> Некоторые FTP клиенты (например FTP плагин в Far-е) поддерживает
схожий тип FTP proxy. В этих клиентах в настройках файрвола можно указать
your_host:FTP_port, и указывать FTP URL-ы в виде:
ftp://local_user#remote_user:local_password#remote_password@ftp_host/



<hr><a name=T></a><center><br><h2>TLS/SSL сервер</h2></center><p>
Сервер не содержит встроенных TLS/SSL криптографических функций,
но включает интерфейс для подключения внешней TLS/SSL билиотеки.
Вы можете подключить к серверу <a href=http://www.OpenSSL.org>OpenSSL</a> или
<a href=http://www.gnutls.org>GNU TLS</a>. Простая DLL базирующаяся
на OpenSSL 0.9.6j лежит здесь:
<a href=http://mf.inc.ru/seclib.zip>seclib.zip</a>
<hr>

<a name=r><p></a><center><br><h2>Регистрация.</h2></center>
 После ознакомления с программой, если вас все устраивает
и  вы  хотите  использовать  ее в коммерческих целях (получать
финансовую выгоду от ее использования), вы должны
зарегистрировать свою копию.  Регистрируясь,
вы финансируйте развитие продукта, выход новых улучшенных
версий. Следующую версию зарегистрированные пользователи
получат бесплатно.<br>
 Заказ документов на оплату можно сделать в онлайне.
<a href=http://srv.mf.inc.ru/regrus.cgi>онлайне</a>.
По всем вопросам обращайтесь по
<a href=mailto:max@mf.inc.ru>E-mail</a><br><br>

На территории СНГ и Прибалтийских государств программа
может свободно распространяться и использоваться <b>в некоммерческих</b> целях.
Имя регистрации:Гражданин бывшего СНГ<br>
Код, например, 31.<br>


<p> <a name=l><p></a><center><br><h2>Заключение.</h2></center>
В заключении я не могу не выразить свою глубочайшую признательность,
программистам, написавшим прекрасный компилятор GNU C++, с помощью которого
откомпилирована эта программа. Я благодарю GNU за то, что они подарили мне
возможность писать самые лучшие программы, используя самый лучший
компилятор.<br>
 Вы можете посмотреть GNU ресурсы:
<li><a href=http://www.delorie.com/djgpp/>DJGPP</a> --
домашняя страница трансляции GNU GCC в среду DOS.<br> <font size=-1> Я пользовался
именно этой версией, своими библиотеками, вызывающими WIN32 API
и своей программкой строящей Windows PE *.exe из COFF a.out.</font><br>
<li><a href=http://www.gnu.org/>GNU</a> -- Собственно сам сайт GNU.

<br><br><br><p align=right><a href="mailto:max@feokt.spb.ru"><i>М. Феоктистов</i></a><p>
<hr><p><a href=#c>Содержание</a><hr></body></html>


